########################################################################
#######################################################################
# PlayBook create by Cirillo Giuseppe
# ########################################################################
########################################################################
- name: PlayBook for Install WinVM on Datacenter DEV
  hosts: localhost
  tasks:
  - name: Clone a virtual machine from Windows template and customize
    community.vmware.vmware_guest:
      datacenter: "{{vcenter_name}}"
      validate_certs: no
      folder: "{{vcenter_folder}}"
      cluster: "{{vcenter_cluster}}"
      name: "{{vm_hostname}}"
      template: "{{vm_template}}"
      state: poweredon
      disk:
        - size_gb: "{{disk_size_gb}}"
          type: eagerzeroedthick
          datastore: "{{vcenter_datastore}}"
      hardware:
        memory_mb: "{{vm_memory}}"
        num_cpus: "{{vm_cpu}}"
        scsi: lsilogicsas
      networks:
        - name: "{{network_name}}"
          ip: "{{network_ip}}"
          netmask: 255.255.255.0
          gateway: "{{network_gw}}"
          domain: "{{network_domain}}"
          dns_servers:
            - "{{dns_servers[0]}}"
            - "{{dns_servers[1]}}"
          type: "{{ip_mode}}"
      customization:
        domain: "{{network_domain}}"
        hostname: "{{vm_hostname}}"
        timezone: 110
        dns_servers:
            - "{{dns_servers[0]}}"
            - "{{dns_servers[1]}}"
      wait_for_customization: false
      wait_for_ip_address: false
    register: deploy
    delegate_to: localhost
  - name: Create temporary build directory
    ansible.windows.win_tempfile:
      state: directory
      suffix: build
  - name: wait for the server to come back
    wait_for:
      host: "{{vm_hostname}}"
      port: 22
      delay: 15
    delegate_to: localhost
    ignore_errors: true
  #- name: Add host to group
  #  ansible.builtin.add_host:
  #    groups:
  #      - LINUX
  #      - DEBIAN-UBUNTU
  #    hostname: '{{ vm_hostname }}'
  #    ansible_ssh_host: '{{ network_ip }}'
  #- name: Refresh inventory to ensure new instances exist in inventory
  #  meta: refresh_inventory
  - name: PRINT NAME
    debug: 
      var: "{{deploy.instance.hw_name}}.{{deploy.instance.hw_product_uuid}}"
