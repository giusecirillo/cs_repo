########################################################################
#######################################################################
# PlayBook create by Cirillo Giuseppe
# ########################################################################
########################################################################
- name: PlayBook for Install updates on ALL HOSTS
  hosts: all
  remote_user: ansible
  become_method: sudo
  become: True
  vars:
    run: false
    reboot: false
  tasks:
# Linux YUM
    - name: LINUX (YUM)
      dnf: list=upgrades
      register: yumoutput
      when: ansible_distribution == 'Rocky'
    - debug:
        msg: "{{yumoutput.msg}}"
      when: ansible_distribution == 'Rocky'

# Linux APT
    - name: LINUX (APT-UPDATE-CACHE)
      ansible.builtin.apt:
        update-cache: true
      when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
    - name: LINUX (APT-LIST)
      ansible.builtin.command: apt list --upgradable
      register: apt_simulate
      when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
    - debug:
        var: apt_simulate.msg
      when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

# Windows
    - name: WINDOWS
      ansible.windows.win_updates:
        category_names: SecurityUpdates
        state: searched
      register: ansible_wu
      when: distribution == "Windows"
    - name: Create Dictionary from var ansible_wu
      set_fact:
        title: "{{ansible_wu.filtered_updates}}"
      when: distribution == "Windows"
    - name: Create Final log
      set_fact:
        titles: "{{title | community.general.json_query('*.title')}}"
      when: distribution == "Windows"
    - name: Print final Log
      debug:
        msg: "{{titles}}"
      when: distribution == "Windows"
