########################################################################
#######################################################################
# PlayBook create by Cirillo Giuseppe
# ########################################################################
########################################################################
- name: PlayBook for Install updates on ALL HOSTS
  hosts: all
  gather_facts: yes
  remote_user: ansible
  #become_method: sudo
  become: True
  vars:
    run: false
    reboot: false
  tasks:
# Linux YUM
    - name: LINUX (YUM)
      dnf: list=upgrades
      register: yumoutput
      when: ansible_pkg_mgr == 'dnf'
    - debug:
        msg: "{{yumoutput.msg}}"
      when: ansible_pkg_mgr == 'dnf'

# Linux APT
    - name: LINUX (APT-UPDATE-CACHE)
      ansible.builtin.apt:
        update-cache: true
      when: ansible_pkg_mgr == 'apt'
    - name: LINUX (APT-LIST)
      ansible.builtin.command: apt list --upgradable
      register: apt_simulate
      when: ansible_pkg_mgr == 'apt'
    - debug:
        var: apt_simulate.msg
      when: ansible_pkg_mgr == 'apt'

# Windows
    - name: WINDOWS
      ansible.windows.win_updates:
        category_names: SecurityUpdates
        state: searched
      register: ansible_wu
      when: distribution == "Windows"
    #- name: Create Dictionary from var ansible_wu
    #  debug: msg={{ ("{{ansible_wu}}" |  from_json) }}
    #  set_fact:
    #    title: "{{ansible_wu.filtered_updates}}"
    #  when: distribution == "Windows"
    #- name: Create Final log
    #  set_fact:
    #    titles: "{{title | community.general.json_query('*.title')}}"
    #  when: distribution == "Windows"
    - name: Print final Log
      debug:
        msg: "{{ ansible_wu.filtered_updates | dict2items | map(attribute="title") | list }}"
      when: distribution == "Windows"
